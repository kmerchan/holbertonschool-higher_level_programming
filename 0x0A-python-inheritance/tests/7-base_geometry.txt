==============================
doctest for 7-base_geometry.py
==============================

>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
>>> bg = BaseGeometry()

TEST CONDITIONS
===============

testing instantiation
::
>>> print(bg.__dict__)
{}

testing area method
::
>>> try:
...     bg.area()
... except Exception as err:
...     print(err)
area() is not implemented

testing integer_validator method
::
>>> try:
...     bg.integer_validator("x", 1)
... except Exception as err:
...     print(err)

testing integer_validator method with TypeError float
::
>>> try:
...     bg.integer_validator("x", 3.14159)
... except Exception as err:
...     print(err)
x must be an integer

testing integer_validator method with TypeError string
::
>>> try:
...     bg.integer_validator("x", "52")
... except Exception as err:
...     print(err)
x must be an integer

testing integer_validator method with ValueError
::
>>> try:
...     bg.integer_validator("x", -2)
... except Exception as err:
...     print(err)
x must be greater than 0

testing integer_validator method with no arguments
::
>>> try:
...     bg.integer_validator()
... except Exception as err:
...     print(err)
integer_validator() missing 2 required positional arguments: 'name' and 'value'

testing integer_validator method with only one argument
::
>>> try:
...     bg.integer_validator("x")
... except Exception as err:
...     print(err)
integer_validator() missing 1 required positional argument: 'value'

testing integer_validator with None
::
>>> try:
...     bg.integer_validator(None, None)
... except Exception as err:
...     print(err)
None must be an integer
